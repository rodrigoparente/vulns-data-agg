# python imports
import sys
from io import BytesIO
from urllib.request import urlopen

# third-party imports
import cve_searchsploit as CS
import pandas as pd

# project imports
from commons.file import save_to_csv


def main(exploit_feed, exploit_csv, update_db):

    # update exploitdb database
    if update_db:
        CS.update_db()

    print('Downloading exploit file...')

    try:
        with urlopen(exploit_feed) as resp:
            exploits = pd.read_csv(BytesIO(resp.read()))
    except Exception as e:
        print(f'Could not download the file: {e}')

    print('Parsing csv file...')

    results = list()
    for row in exploits.itertuples():
        cves = CS.cve_from_edbid(int(row.id))

        for cve in cves:
            results.append([
                cve,
                row.description,
                row.date,
                row.type,
                row.platform
            ])

    header = ['CVE-ID', 'exploitName', 'exploitPublishedDate', 'exploitType', 'exploitPlataform']
    save_to_csv(exploit_csv, header, results)


if __name__ == '__main__':

    # flag that controls whether to
    # update the exploit base or not
    update = False
    if len(sys.argv) == 2:
        update = True

    main(exploit_feed='https://raw.githubusercontent.com/offensive-security/exploitdb/master/files_exploits.csv',  # noqa
         exploit_csv='output/exploits.csv',
         update_db=update)
